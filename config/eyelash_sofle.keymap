#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        combo_caps {
            bindings = <&kp CAPS>;
            key-positions = <39 51>;
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp GRAVE                   &kp N1                   &kp N2        &kp N3                         &kp N4  &kp N5       &mmv MOVE_UP     &kp N6     &kp N7  &kp N8                           &kp N9         &kp N0                     &kp BACKSPACE
&kp ESCAPE                  &kp Q                    &kp W         &kp E                          &kp R   &kp T        &mmv MOVE_DOWN   &kp Y      &kp U   &kp I                            &kp O          &kp P                      &kp MINUS
&kp TAB                     &kp A                    &kp S         &kp D                          &kp F   &kp G        &mmv MOVE_LEFT   &kp H      &kp J   &kp K                            &kp L          &kp SEMICOLON              &kp APOS
&mt LSHFT LEFT_PARENTHESIS  &kp Z                    &kp X         &kp C                          &kp V   &kp B        &mmv MOVE_RIGHT  &kp N      &kp M   &kp COMMA                        &kp DOT        &kp SLASH                  &mt RIGHT_SHIFT RIGHT_PARENTHESIS
&kp C_MUTE                  &mt LEFT_ALT LEFT_BRACE  &kp LEFT_GUI  &mt LEFT_CONTROL LEFT_BRACKET  &mo 1   &kp ENTER    &mkp LCLK        &kp SPACE  &mo 2   &mt RIGHT_CONTROL RIGHT_BRACKET  &kp RIGHT_GUI  &mt RIGHT_ALT RIGHT_BRACE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "base";
        };

        lower {
            bindings = <
&kp F1      &kp F2           &kp F3        &kp F4        &kp F5        &kp F6          &mmv MOVE_UP     &kp F7     &kp F8    &kp F9     &kp F10    &kp F11    &kp F12
&trans      &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &mmv MOVE_DOWN   &kp N6     &kp N7    &kp N8     &kp N9     &kp N0     &kp EQUAL
&trans      &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT     &mmv MOVE_LEFT   &kp CARET  &kp AMPS  &kp STAR   &kp TILDE  &kp BSLH   &kp PIPE
&trans      &kp QUESTION     &kp LBRC      &kp PLUS      &kp LBKT      &kp MINUS       &mmv MOVE_RIGHT  &kp UNDER  &kp RBKT  &kp EQUAL  &kp RBRC   &kp SLASH  &trans
&kp C_MUTE  &trans           &trans        &trans        &trans        &kp ESCAPE      &mkp RCLK        &kp BSPC   &trans    &trans     &trans     &trans
            >;

            display-name = "lower";
            sensor-bindings = <&scroll_encoder>;
        };

        raise {
            bindings = <
&kp F13  &kp F14 &kp F15 &trans  &trans  &trans    &mmv MOVE_UP     &trans    &trans          &trans     &trans      &trans  &trans
&trans   &trans  &trans  &trans  &trans  &trans    &mmv MOVE_DOWN   &trans    &kp K_PREVIOUS  &trans     &kp K_NEXT  &trans  &kp BACKSPACE
&trans   &trans  &trans  &trans  &trans  &trans    &mmv MOVE_LEFT   &kp LEFT  &kp DOWN        &kp UP     &kp RIGHT   &kp DEL &trans
&trans   &trans  &trans  &trans  &trans  &trans    &mmv MOVE_RIGHT  &kp HOME  &kp PG_DN       &kp PG_UP  &kp END     &trans  &trans
&trans   &trans  &trans  &trans  &trans  &trans    &mkp MCLK        &trans    &trans          &trans     &trans      &trans
            >;

            display-name = "raise";
            sensor-bindings = <&scroll_encoder>;

        };

        adjust {
            bindings = <
&trans     &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &trans  &trans  &trans      &trans     &trans       &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &trans      &trans     &trans       &trans
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &trans       &trans
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp MB4         &trans  &trans  &trans      &trans     &trans
            >;

            label = "adjust";
            sensor-bindings = <&scroll_encoder>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
